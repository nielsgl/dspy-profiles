# .github/workflows/ci.yml
#
# Definitive Continuous Integration (CI) workflow for the project.
#
# This workflow performs the following critical checks on every push to a pull request:
# 1.  **Linting & Static Analysis**: Ensures code quality and adherence to standards using Ruff.
# 2.  **Security Scanning**: Audits dependencies for known vulnerabilities using pip-audit.
# 3.  **Matrix Testing**: Runs the full test suite across multiple Python versions and operating systems
#     to guarantee compatibility.
# 4.  **Coverage Reporting**: Uploads test coverage data to Codecov to monitor test effectiveness.
#
# This workflow is designed to be fast, efficient, and provide clear, actionable feedback to developers,
# preventing regressions and maintaining a high standard of code health.

name: "CI: Lint, Scan & Test"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-scan:
    name: "üßê Lint & Scan"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install uv and enable caching
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: "Install dependencies"
        run: uv sync --all-extras --dev

      - name: "Run linter"
        run: uv run ruff check .
  # pip-audit:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: pypa/gh-action-pip-audit@v1.0.0
  #       with:
  #         inputs: requirements.txt
  #     - name: "Run security audit"
  #       run: uv run pip-audit

  test:
    name: "üß™ Test"
    needs: lint-and-scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    # runs-on: ${{ matrix.os }}
    # strategy:
    #   matrix:
    #     os: [ubuntu-latest, macos-latest, windows-latest]
    #     python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install uv and enable caching"
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: "Install dependencies"
        run: uv sync --all-extras --dev

      - name: "Run tests"
        run: uv run pytest --cov --cov-report json

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: coverage.json

      # - name: "Upload coverage to Codecov"
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     fail_ci_if_error: true
