name: "Release: Auto-bump & Tag on main"

on:
  push:
    branches: [ main ]

permissions:
  contents: write

concurrency:
  group: auto-tag-main
  cancel-in-progress: true

jobs:
  bump_and_tag:
    name: "ðŸ”– Bump & Tag"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: "Short-circuit if release commit"
        id: gate
        shell: bash
        run: |
          set -euo pipefail
          msg=$(git log -1 --pretty=%B)
          if echo "$msg" | grep -Eiq '^(bump: version|chore\(release\))'; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
            echo "Release commit detected; skipping bump." >&2
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      - name: "Ensure current version tag exists (local only)"
        if: steps.gate.outputs.skip != 'true'
        shell: bash
        run: |
          set -euo pipefail
          CURR_VERSION=$(uv run cz version --project)
          if ! git rev-parse -q --verify "refs/tags/$CURR_VERSION" >/dev/null; then
            root=$(git rev-list --max-parents=0 HEAD | tail -n1)
            echo "Tag $CURR_VERSION not found. Creating local bootstrap tag at repo root $root"
            git tag -a "$CURR_VERSION" "$root" -m "bootstrap tag for current version $CURR_VERSION"
          fi

      - name: "Set up Python"
        if: steps.gate.outputs.skip != 'true'
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: "Install uv and enable caching"
        if: steps.gate.outputs.skip != 'true'
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: "Install dependencies"
        if: steps.gate.outputs.skip != 'true'
        run: uv sync --all-extras --dev

      - name: "Commitizen bump"
        if: steps.gate.outputs.skip != 'true'
        shell: bash
        run: |
          set -euo pipefail
          uv run cz bump --yes

      - name: "Push commit and new tag only"
        if: steps.gate.outputs.skip != 'true'
        shell: bash
        run: |
          set -euo pipefail
          NEW_VERSION=$(uv run cz version --project)
          git push
          git push origin "refs/tags/${NEW_VERSION}"
