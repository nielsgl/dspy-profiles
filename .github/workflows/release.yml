name: "Release: Publish on Tag + Docs"

on:
  push:
    tags:
      - "*"

permissions:
  contents: write
  id-token: write

concurrency:
  group: release-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  publish:
    name: "ðŸ“¦ Publish to PyPI"
    if: github.ref_name != '0.0.0'
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout tag"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: "Install uv and enable caching"
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: "Build package"
        run: uv build --sdist --wheel

      - name: "Publish to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        # with:
        #   attestations: true

      - name: "Create GitHub Release"
        env:
          GH_TOKEN: ${{ github.token }}
          TAG: ${{ github.ref_name }}
        run: |
          gh release create "$TAG" \
            --repo "$GITHUB_REPOSITORY" \
            --title "$TAG" \
            --generate-notes || echo "Release may already exist; continuing."

  docs:
    name: "ðŸ“š Deploy Docs"
    needs: publish
    if: github.ref_name != '0.0.0'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: "Checkout tag"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: "Install uv and enable caching"
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: "Install dependencies"
        run: uv sync --all-extras --dev

      - name: "Build and deploy documentation"
        run: uv run mkdocs gh-deploy --force
